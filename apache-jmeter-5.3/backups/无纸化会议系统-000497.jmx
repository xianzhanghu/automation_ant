<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="无纸化会议系统" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="environment" elementType="Argument">
            <stringProp name="Argument.name">environment</stringProp>
            <stringProp name="Argument.value">测试服</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="后台系统" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${domain}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="测试服环境" enabled="true">
          <stringProp name="IfController.condition">&quot;${environment}&quot;==&quot;测试服&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="全局化变量" enabled="true">
            <stringProp name="BeanShellSampler.query">//vars.put(&quot;domain&quot;,&quot;192.168.2.201&quot;);  //服务器地址
vars.put(&quot;domain&quot;,&quot;192.168.2.191&quot;);
vars.put(&quot;username&quot;,&quot;75-73-65-72&quot;);  //后台账户
vars.put(&quot;password&quot;,&quot;&quot;);             //后台密码
vars.put(&quot;port&quot;,&quot;80&quot;);               //端口号
vars.put(&quot;ginseng&quot;,&quot;1&quot;);             //参会人数
vars.put(&quot;roomId&quot;,&quot;1&quot;);              //房间号
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="后台登录" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_登录" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${username}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/users/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="初始化清空数据" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="会前设置" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="会议管理" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">1</stringProp>
            </LoopController>
            <hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="会议名称" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">1</stringProp>
              </LoopController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_会议名称_查询获取number" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/meetings/conferences</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                    <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="获取总的业务流程" enabled="true">
                    <stringProp name="VAR">number</stringProp>
                    <stringProp name="JSONPATH">$..[?(@.name=~/.*自动化.*/)].conferenceId</stringProp>
                    <stringProp name="DEFAULT"></stringProp>
                    <stringProp name="VARIABLE"></stringProp>
                    <stringProp name="SUBJECT">BODY</stringProp>
                    <stringProp name="INPUT_FORMAT">JSON</stringProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                  <hashTree/>
                </hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="删除检查数据" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${number_matchNr}</stringProp>
                </LoopController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_会议名称_查询获取number" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/meetings/conferences</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                      <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="获取总的业务流程" enabled="true">
                      <stringProp name="VAR">number</stringProp>
                      <stringProp name="JSONPATH">$..[?(@.name=~/.*自动化.*/)].conferenceId</stringProp>
                      <stringProp name="DEFAULT"></stringProp>
                      <stringProp name="VARIABLE"></stringProp>
                      <stringProp name="SUBJECT">BODY</stringProp>
                      <stringProp name="INPUT_FORMAT">JSON</stringProp>
                    </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_会议名称_删除" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/meetings/conferences/${number_1}/delete</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                      <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="会议日程" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">1</stringProp>
              </LoopController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_会议日程_查询获取number_1" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/meetings/conferences</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                    <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="获取总的业务流程" enabled="true">
                    <stringProp name="VAR">number_1</stringProp>
                    <stringProp name="JSONPATH">$..[?(@.meetingName=~/.*自动化.*/)].meetingId</stringProp>
                    <stringProp name="DEFAULT"></stringProp>
                    <stringProp name="VARIABLE"></stringProp>
                    <stringProp name="SUBJECT">BODY</stringProp>
                    <stringProp name="INPUT_FORMAT">JSON</stringProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                  <hashTree/>
                </hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="删除检查数据" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${number_1_matchNr}</stringProp>
                </LoopController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_会议日程_查询获取number_1" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/meetings/conferences</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                      <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="number_1" enabled="true">
                      <stringProp name="VAR">number_1</stringProp>
                      <stringProp name="JSONPATH">$..[?(@.meetingName=~/.*自动化.*/)].meetingId</stringProp>
                      <stringProp name="DEFAULT"></stringProp>
                      <stringProp name="VARIABLE"></stringProp>
                      <stringProp name="SUBJECT">BODY</stringProp>
                      <stringProp name="INPUT_FORMAT">JSON</stringProp>
                    </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_会议日程_删除" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/meetings/${number_1_1}/delete</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                      <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:${number_1_1}&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="人员资料" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">1</stringProp>
            </LoopController>
            <hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="人员资料" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">1</stringProp>
              </LoopController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_系统管理_人员资料_查询所有人员资料获取number_2" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/userinfos</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                    <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="获取总的业务流程" enabled="true">
                    <stringProp name="VAR">number_2</stringProp>
                    <stringProp name="JSONPATH">$..[?(@.userInfoName=~/.*自动化.*/)].userInfoId</stringProp>
                    <stringProp name="DEFAULT"></stringProp>
                    <stringProp name="VARIABLE"></stringProp>
                    <stringProp name="SUBJECT">BODY</stringProp>
                    <stringProp name="INPUT_FORMAT">JSON</stringProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                  <hashTree/>
                </hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="删除检查数据" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${number_2_matchNr}</stringProp>
                </LoopController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_系统管理_人员资料_查询所有人员资料获取number_2" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/userinfos</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                      <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="number_2" enabled="true">
                      <stringProp name="VAR">number_2</stringProp>
                      <stringProp name="JSONPATH">$..[?(@.userInfoName=~/.*自动化.*/)].userInfoId</stringProp>
                      <stringProp name="DEFAULT"></stringProp>
                      <stringProp name="VARIABLE"></stringProp>
                      <stringProp name="SUBJECT">BODY</stringProp>
                      <stringProp name="INPUT_FORMAT">JSON</stringProp>
                    </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_系统管理_人员资料_删除人员资料" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/userinfos/${number_2_1}/delete</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                      <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="自定义类型" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">1</stringProp>
              </LoopController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_系统管理_人员资料_查询自定义类型获取number_3" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/userinfos/custom_fields</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                    <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="获取number_3" enabled="true">
                    <stringProp name="VAR">number_3</stringProp>
                    <stringProp name="JSONPATH">$..[?(@.content=~/.*自动化.*/)].id</stringProp>
                    <stringProp name="DEFAULT"></stringProp>
                    <stringProp name="VARIABLE"></stringProp>
                    <stringProp name="SUBJECT">BODY</stringProp>
                    <stringProp name="INPUT_FORMAT">JSON</stringProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                  <hashTree/>
                </hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="删除检查数据" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${number_3_matchNr}</stringProp>
                </LoopController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_系统管理_人员资料_查询自定义类型获取number_3" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/userinfos/custom_fields</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                      <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="获取number_3" enabled="true">
                      <stringProp name="VAR">number_3</stringProp>
                      <stringProp name="JSONPATH">$..[?(@.content=~/.*自动化.*/)].id</stringProp>
                      <stringProp name="DEFAULT"></stringProp>
                      <stringProp name="VARIABLE"></stringProp>
                      <stringProp name="SUBJECT">BODY</stringProp>
                      <stringProp name="INPUT_FORMAT">JSON</stringProp>
                    </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_系统管理_人员资料_删除自定义类型" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/userinfos/custom_fields/${number_3_1}/delete</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                      <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="会前设置" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="会议管理" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="会议名称" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">1</stringProp>
            </LoopController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_会议名称_新增获取conferenceId" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;conferenceId&quot;:0,&quot;name&quot;:&quot;自动化会议名称_${__time(yyyy-MM-dd HH:mm:ss,)}&quot;,&quot;place&quot;:&quot;自动化地址_${__time(yyyy-MM-dd HH:mm:ss,)}&quot;,&quot;startTime&quot;:${__time(,)},&quot;endTime&quot;:${__timeShift(,,P2D,,)},&quot;conferenceContent&quot;:&quot;自动化会议内容_开始会议开始会议开始会议开始会议开始会议_${__time(yyyy-MM-dd HH:mm:ss,)}&quot;,&quot;createTime&quot;:${__time(,)},&quot;conferenceKey&quot;:&quot;${__time(yyyyMMdd,)}1007440343&quot;,&quot;result&quot;:0,&quot;message&quot;:0}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/conferences/create</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取conferenceId" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">conferenceId</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.conferenceId</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_会议名称_编辑" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;conferenceId&quot;:${conferenceId},&quot;name&quot;:&quot;自动化编辑会议名称_${__time(yyyy-MM-dd HH:mm:ss,)} &quot;,&quot;place&quot;:&quot;自动化编辑地址_${__time(yyyy-MM-dd HH:mm:ss,)}&quot;,&quot;startTime&quot;:${__time(,)},&quot;endTime&quot;:${__timeShift(,,P2D,,)},&quot;conferenceContent&quot;:&quot;自动化编辑会议内容_会议内容会议内容会议内容议内容会议内容会议内容_${__time(yyyy-MM-dd HH:mm:ss,)}&quot;,&quot;createTime&quot;:0,&quot;conferenceKey&quot;:&quot;${__time(yyyyMMdd,)}1007440343&quot;,&quot;result&quot;:0,&quot;message&quot;:0}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/conferences/create</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_会议名称_删除" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/conferences/${conferenceId}/delete</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_会议名称_查询" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/conferences</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="会议日程" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">1</stringProp>
            </LoopController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_会议日程_新增获取meetingId" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;meetingId&quot;:0,&quot;conferenceId&quot;:${conferenceId},&quot;meetingName&quot;:&quot;自动化会议日程_${__time(yyyy-MM-dd HH:mm:ss,)}&quot;,&quot;meetingContent&quot;:null,&quot;createrId&quot;:0,&quot;creatarName&quot;:null,&quot;createTime&quot;:0,&quot;startTime&quot;:${__time(,)},&quot;endTime&quot;:${__timeShift(,,P1D,,)},&quot;state&quot;:0,&quot;seatGroupId&quot;:0,&quot;meetingUrl&quot;:null,&quot;roomId&quot;:${roomId},&quot;registerMode&quot;:0,&quot;dynamicRegister&quot;:false,&quot;topicDirect&quot;:true,&quot;meetingUser&quot;:&quot;${ginseng}&quot;,&quot;absPersonCount&quot;:${ginseng},&quot;topicPersonCount&quot;:${ginseng},&quot;registered&quot;:0,&quot;topicRegistered&quot;:0,&quot;startRegisterTime&quot;:3,&quot;autoEndRegisterTime&quot;:15,&quot;quorum&quot;:0.67,&quot;enableRegisterTime&quot;:true,&quot;enableAutoEnd&quot;:true,&quot;enableQuorum&quot;:true,&quot;meetingKey&quot;:&quot;202206020224216460&quot;,&quot;fileUrl&quot;:null,&quot;bgColor&quot;:87194,&quot;showSignedDetail&quot;:true,&quot;autoChangePage&quot;:true,&quot;autoPageTime&quot;:30,&quot;result&quot;:0,&quot;message&quot;:0}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/create</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取meetingId" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">meetingId</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.meetingId</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_会议日程_报到议题" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22meetingId%22%3A${meetingId}%2C%22topicId%22%3A0%2C%22topicName%22%3A%22Regist%22%2C%22topicType%22%3A0%2C%22voteId%22%3A0%2C%22voteType%22%3A0%2C%22displayReadyTime%22%3A0%2C%22readyVoteTime%22%3A0%2C%22autoResult%22%3Afalse%2C%22autoResultTime%22%3A0%2C%22nominative%22%3Afalse%2C%22closeHintWindow%22%3Afalse%2C%22weightVote%22%3Afalse%2C%22screenAutoShow%22%3Afalse%2C%22percentShow%22%3Afalse%2C%22voteOptionCount%22%3A0%2C%22stepValue%22%3A0%2C%22hasResult%22%3Afalse%2C%22topicStatus%22%3A0%2C%22maxSelection%22%3A0%2C%22first%22%3Afalse%2C%22optionBeenList%22%3Anull%2C%22passPercent%22%3A0%2C%22sloganId%22%3A0%2C%22docType%22%3A0%2C%22autoSend%22%3Afalse%2C%22dicussId%22%3A0%2C%22mode%22%3A0%2C%22requestNum%22%3A0%2C%22speakNum%22%3A0%2C%22speakTime%22%3A0%2C%22seatDisplay%22%3A0%2C%22screenDisplay%22%3A0%2C%22reportId%22%3A0%2C%22showTitle%22%3Afalse%2C%22createTime%22%3A0%2C%22topicKey%22%3Anull%2C%22largeThan%22%3Afalse%2C%22enableVoteBase%22%3Afalse%2C%22bgColor%22%3A0%2C%22sequence%22%3A0%2C%22parentTopicId%22%3A0%2C%22notVoteAsAbtain%22%3Afalse%2C%22sloganMarginLeft%22%3A0%2C%22sloganMarginRight%22%3A0%2C%22topicExField%22%3A%7B%22votePassMode%22%3A0%2C%22votePassState%22%3A0%7D%2C%22result%22%3A0%2C%22message%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics/add/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_会议日程_编辑" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;meetingId&quot;:${meetingId},&quot;conferenceId&quot;:${conferenceId},&quot;meetingName&quot;:&quot;自动化编辑会议日程_${__time(yyyy-MM-dd HH:mm:ss,)}&quot;,&quot;meetingContent&quot;:null,&quot;createrId&quot;:0,&quot;creatarName&quot;:null,&quot;createTime&quot;:0,&quot;startTime&quot;:${__time(,)},&quot;endTime&quot;:${__timeShift(,,P1D,,)},&quot;state&quot;:0,&quot;seatGroupId&quot;:0,&quot;meetingUrl&quot;:null,&quot;roomId&quot;:${roomId},&quot;registerMode&quot;:0,&quot;dynamicRegister&quot;:false,&quot;topicDirect&quot;:true,&quot;meetingUser&quot;:&quot;${ginseng}&quot;,&quot;absPersonCount&quot;:${ginseng},&quot;topicPersonCount&quot;:${ginseng},&quot;registered&quot;:0,&quot;topicRegistered&quot;:0,&quot;startRegisterTime&quot;:3,&quot;autoEndRegisterTime&quot;:15,&quot;quorum&quot;:0.67,&quot;enableRegisterTime&quot;:true,&quot;enableAutoEnd&quot;:true,&quot;enableQuorum&quot;:true,&quot;meetingKey&quot;:&quot;202206020352058187&quot;,&quot;fileUrl&quot;:null,&quot;bgColor&quot;:87194,&quot;showSignedDetail&quot;:true,&quot;autoChangePage&quot;:true,&quot;autoPageTime&quot;:30,&quot;result&quot;:0,&quot;message&quot;:0}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/create</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_会议日程_删除" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/delete</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:${meetingId}&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_会议日程_查询" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/conferences</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="议题议案" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="标语" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">1</stringProp>
            </LoopController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell 取样器" enabled="false">
                <stringProp name="BeanShellSampler.query">String[] query = new String[]{&quot;1&quot;, &quot;2&quot;, &quot;3&quot;,&quot;9&quot;};

    Random random = new Random();

    int i = random.nextInt(query.length);

    vars.put(&quot;searchContent&quot;,query[i]);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_标语_新增获取topicId" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22meetingId%22%3A${meetingId}%2C%22topicId%22%3A0%2C%22topicName%22%3A%22自动化标语_${__time(yyyy-MM-dd HH:mm:ss,)}%22%2C%22topicType%22%3A1%2C%22voteId%22%3A0%2C%22voteType%22%3A0%2C%22displayReadyTime%22%3A0%2C%22readyVoteTime%22%3A0%2C%22autoResult%22%3Afalse%2C%22autoResultTime%22%3A0%2C%22nominative%22%3Afalse%2C%22closeHintWindow%22%3Afalse%2C%22weightVote%22%3Afalse%2C%22screenAutoShow%22%3Afalse%2C%22percentShow%22%3Afalse%2C%22voteOptionCount%22%3A0%2C%22stepValue%22%3A0%2C%22hasResult%22%3Afalse%2C%22topicStatus%22%3A0%2C%22maxSelection%22%3A0%2C%22first%22%3Afalse%2C%22optionBeenList%22%3Anull%2C%22passPercent%22%3A0%2C%22sloganId%22%3A0%2C%22docType%22%3A0%2C%22autoSend%22%3Atrue%2C%22dicussId%22%3A0%2C%22mode%22%3A0%2C%22requestNum%22%3A0%2C%22speakNum%22%3A0%2C%22speakTime%22%3A0%2C%22seatDisplay%22%3A0%2C%22screenDisplay%22%3A0%2C%22reportId%22%3A0%2C%22showTitle%22%3Afalse%2C%22createTime%22%3A0%2C%22topicKey%22%3A%22202206061130091383%22%2C%22largeThan%22%3Afalse%2C%22enableVoteBase%22%3Afalse%2C%22bgColor%22%3A87194%2C%22sequence%22%3A75%2C%22parentTopicId%22%3A0%2C%22notVoteAsAbtain%22%3Afalse%2C%22sloganMarginLeft%22%3A0%2C%22sloganMarginRight%22%3A0%2C%22topicExField%22%3A%7B%22votePassMode%22%3A0%2C%22votePassState%22%3A0%7D%2C%22result%22%3A0%2C%22message%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics/add/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取topicId" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">topicId</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.topicId</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_标语_编辑" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22meetingId%22%3A${meetingId}%2C%22topicId%22%3A${topicId}%2C%22topicName%22%3A%22自动化编辑标语_${__time(yyyy-MM-dd HH:mm:ss,)}%22%2C%22topicType%22%3A1%2C%22voteId%22%3A0%2C%22voteType%22%3A0%2C%22displayReadyTime%22%3A0%2C%22readyVoteTime%22%3A0%2C%22autoResult%22%3Afalse%2C%22autoResultTime%22%3A0%2C%22nominative%22%3Afalse%2C%22closeHintWindow%22%3Afalse%2C%22weightVote%22%3Afalse%2C%22screenAutoShow%22%3Afalse%2C%22percentShow%22%3Afalse%2C%22voteOptionCount%22%3A0%2C%22stepValue%22%3A0%2C%22hasResult%22%3Afalse%2C%22topicStatus%22%3A0%2C%22maxSelection%22%3A0%2C%22first%22%3Afalse%2C%22optionBeenList%22%3Anull%2C%22passPercent%22%3A0%2C%22sloganId%22%3A0%2C%22docType%22%3A0%2C%22autoSend%22%3Atrue%2C%22dicussId%22%3A0%2C%22mode%22%3A0%2C%22requestNum%22%3A0%2C%22speakNum%22%3A0%2C%22speakTime%22%3A0%2C%22seatDisplay%22%3A0%2C%22screenDisplay%22%3A0%2C%22reportId%22%3A0%2C%22showTitle%22%3Afalse%2C%22createTime%22%3A0%2C%22topicKey%22%3A%22202206061130091383%22%2C%22largeThan%22%3Afalse%2C%22enableVoteBase%22%3Afalse%2C%22bgColor%22%3A87194%2C%22sequence%22%3A76%2C%22parentTopicId%22%3A0%2C%22notVoteAsAbtain%22%3Afalse%2C%22sloganMarginLeft%22%3A0%2C%22sloganMarginRight%22%3A0%2C%22topicExField%22%3A%7B%22votePassMode%22%3A0%2C%22votePassState%22%3A0%7D%2C%22result%22%3A0%2C%22message%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics/add/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_标语编辑_新增" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">-------------------------------28947758029299&#xd;
Content-Disposition: form-data; name=&quot;bgColor&quot;&#xd;
&#xd;
87194&#xd;
-------------------------------28947758029299&#xd;
Content-Disposition: form-data; name=&quot;topicFile&quot;; filename=&quot;T_202208010927490556_Content.RTF&quot;&#xd;
Content-Type: application/octet-stream&#xd;
&#xd;
{\rtf1\ansi\ansicpg936\deff0\deflang1033\deflangfe2052{\fonttbl{\f0\fnil\fcharset0 Arial;}}&#xd;
{\colortbl ;\red255\green255\blue255;}&#xd;
\viewkind4\uc1\pard\cf1\lang2052\fs101 自动化标语编辑_${__time(yyyy_MM_dd HH:mm:ss,)}\par&#xd;
}&#xd;
.&#xd;
-------------------------------28947758029299--</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics/${topicId}/file</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, application/xml, text/json, text/x-json, text/javascript, text/xml</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">RestSharp/105.2.3.0</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">multipart/form-data; boundary=-----------------------------28947758029299</stringProp>
                    </elementProp>
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">192.168.2.191</stringProp>
                    </elementProp>
                    <elementProp name="Content-Length" elementType="Header">
                      <stringProp name="Header.name">Content-Length</stringProp>
                      <stringProp name="Header.value">574</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_查询" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, application/xml, text/json, text/x-json, text/javascript, text/xml</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">RestSharp/105.2.3.0</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_标语_删除" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${roomId}/topics/${topicId}/delete</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="总议题&amp;表决" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">1</stringProp>
            </LoopController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_总议题_新增获取topicId_1" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22meetingId%22%3A${meetingId}%2C%22topicId%22%3A0%2C%22topicName%22%3A%22自动化总议题_${__time(yyyy-MM-dd HH:mm:ss,)}%22%2C%22topicType%22%3A9%2C%22voteId%22%3A0%2C%22voteType%22%3A0%2C%22displayReadyTime%22%3A0%2C%22readyVoteTime%22%3A0%2C%22autoResult%22%3Afalse%2C%22autoResultTime%22%3A0%2C%22nominative%22%3Afalse%2C%22closeHintWindow%22%3Afalse%2C%22weightVote%22%3Afalse%2C%22screenAutoShow%22%3Afalse%2C%22percentShow%22%3Afalse%2C%22voteOptionCount%22%3A0%2C%22stepValue%22%3A0%2C%22hasResult%22%3Afalse%2C%22topicStatus%22%3A0%2C%22maxSelection%22%3A0%2C%22first%22%3Afalse%2C%22optionBeenList%22%3Anull%2C%22passPercent%22%3A0%2C%22sloganId%22%3A0%2C%22docType%22%3A0%2C%22autoSend%22%3Atrue%2C%22dicussId%22%3A0%2C%22mode%22%3A0%2C%22requestNum%22%3A0%2C%22speakNum%22%3A0%2C%22speakTime%22%3A0%2C%22seatDisplay%22%3A0%2C%22screenDisplay%22%3A0%2C%22reportId%22%3A0%2C%22showTitle%22%3Afalse%2C%22createTime%22%3A0%2C%22topicKey%22%3A%22202206061130091383%22%2C%22largeThan%22%3Afalse%2C%22enableVoteBase%22%3Afalse%2C%22bgColor%22%3A87194%2C%22sequence%22%3A75%2C%22parentTopicId%22%3A0%2C%22notVoteAsAbtain%22%3Afalse%2C%22sloganMarginLeft%22%3A0%2C%22sloganMarginRight%22%3A0%2C%22topicExField%22%3A%7B%22votePassMode%22%3A0%2C%22votePassState%22%3A0%7D%2C%22result%22%3A0%2C%22message%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics/add/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取topicId_1" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">topicId_1</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.topicId</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_总议题_编辑" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22meetingId%22%3A${meetingId}%2C%22topicId%22%3A${topicId_1}%2C%22topicName%22%3A%22自动化编辑总议题_${__time(yyyy-MM-dd HH:mm:ss,)}%22%2C%22topicType%22%3A9%2C%22voteId%22%3A0%2C%22voteType%22%3A0%2C%22displayReadyTime%22%3A0%2C%22readyVoteTime%22%3A0%2C%22autoResult%22%3Afalse%2C%22autoResultTime%22%3A0%2C%22nominative%22%3Afalse%2C%22closeHintWindow%22%3Afalse%2C%22weightVote%22%3Afalse%2C%22screenAutoShow%22%3Afalse%2C%22percentShow%22%3Afalse%2C%22voteOptionCount%22%3A0%2C%22stepValue%22%3A0%2C%22hasResult%22%3Afalse%2C%22topicStatus%22%3A0%2C%22maxSelection%22%3A0%2C%22first%22%3Afalse%2C%22optionBeenList%22%3Anull%2C%22passPercent%22%3A0%2C%22sloganId%22%3A0%2C%22docType%22%3A0%2C%22autoSend%22%3Atrue%2C%22dicussId%22%3A0%2C%22mode%22%3A0%2C%22requestNum%22%3A0%2C%22speakNum%22%3A0%2C%22speakTime%22%3A0%2C%22seatDisplay%22%3A0%2C%22screenDisplay%22%3A0%2C%22reportId%22%3A0%2C%22showTitle%22%3Afalse%2C%22createTime%22%3A0%2C%22topicKey%22%3A%22202206061130091383%22%2C%22largeThan%22%3Afalse%2C%22enableVoteBase%22%3Afalse%2C%22bgColor%22%3A87194%2C%22sequence%22%3A76%2C%22parentTopicId%22%3A0%2C%22notVoteAsAbtain%22%3Afalse%2C%22sloganMarginLeft%22%3A0%2C%22sloganMarginRight%22%3A0%2C%22topicExField%22%3A%7B%22votePassMode%22%3A0%2C%22votePassState%22%3A0%7D%2C%22result%22%3A0%2C%22message%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics/add/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_总议题_删除" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${roomId}/topics/${topicId_1}/delete</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_表决_新增获取topicId_2" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22meetingId%22%3A${meetingId}%2C%22topicId%22%3A0%2C%22topicName%22%3A%22自动化表决_${__time(yyyy-MM-dd HH:mm:ss,)}%22%2C%22topicType%22%3A2%2C%22voteId%22%3A0%2C%22voteType%22%3A${__Random(0,3,)}%2C%22displayReadyTime%22%3A1%2C%22readyVoteTime%22%3A3%2C%22autoResult%22%3Atrue%2C%22autoResultTime%22%3A15%2C%22nominative%22%3Afalse%2C%22closeHintWindow%22%3Afalse%2C%22weightVote%22%3Afalse%2C%22screenAutoShow%22%3Atrue%2C%22percentShow%22%3Atrue%2C%22voteOptionCount%22%3A3%2C%22stepValue%22%3A0%2C%22hasResult%22%3Afalse%2C%22topicStatus%22%3A0%2C%22maxSelection%22%3A1%2C%22first%22%3Afalse%2C%22optionBeenList%22%3Anull%2C%22passPercent%22%3A50%2C%22sloganId%22%3A0%2C%22docType%22%3A0%2C%22autoSend%22%3Afalse%2C%22dicussId%22%3A0%2C%22mode%22%3A0%2C%22requestNum%22%3A0%2C%22speakNum%22%3A0%2C%22speakTime%22%3A0%2C%22seatDisplay%22%3A0%2C%22screenDisplay%22%3A0%2C%22reportId%22%3A0%2C%22showTitle%22%3Afalse%2C%22createTime%22%3A0%2C%22topicKey%22%3A%22202207140931421351%22%2C%22largeThan%22%3Atrue%2C%22enableVoteBase%22%3Afalse%2C%22bgColor%22%3A87194%2C%22sequence%22%3A130%2C%22parentTopicId%22%3A${topicId_1}%2C%22notVoteAsAbtain%22%3Afalse%2C%22sloganMarginLeft%22%3A0%2C%22sloganMarginRight%22%3A0%2C%22topicExField%22%3A%7B%22votePassMode%22%3A0%2C%22votePassState%22%3A0%7D%2C%22result%22%3A0%2C%22message%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics/add/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取topicId_2" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">topicId_2</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.topicId</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_表决_编辑获取voteType" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22meetingId%22%3A${meetingId}%2C%22topicId%22%3A${topicId_2}%2C%22topicName%22%3A%22自动化编辑表决_${__time(yyyy-MM-dd HH:mm:ss,)}%22%2C%22topicType%22%3A2%2C%22voteId%22%3A0%2C%22voteType%22%3A0%2C%22displayReadyTime%22%3A1%2C%22readyVoteTime%22%3A3%2C%22autoResult%22%3Atrue%2C%22autoResultTime%22%3A15%2C%22nominative%22%3Afalse%2C%22closeHintWindow%22%3Afalse%2C%22weightVote%22%3Afalse%2C%22screenAutoShow%22%3Atrue%2C%22percentShow%22%3Atrue%2C%22voteOptionCount%22%3A3%2C%22stepValue%22%3A0%2C%22hasResult%22%3Afalse%2C%22topicStatus%22%3A0%2C%22maxSelection%22%3A1%2C%22first%22%3Afalse%2C%22optionBeenList%22%3Anull%2C%22passPercent%22%3A50%2C%22sloganId%22%3A0%2C%22docType%22%3A0%2C%22autoSend%22%3Afalse%2C%22dicussId%22%3A0%2C%22mode%22%3A0%2C%22requestNum%22%3A0%2C%22speakNum%22%3A0%2C%22speakTime%22%3A0%2C%22seatDisplay%22%3A0%2C%22screenDisplay%22%3A0%2C%22reportId%22%3A0%2C%22showTitle%22%3Afalse%2C%22createTime%22%3A0%2C%22topicKey%22%3A%22202207140931421351%22%2C%22largeThan%22%3Atrue%2C%22enableVoteBase%22%3Afalse%2C%22bgColor%22%3A87194%2C%22sequence%22%3A130%2C%22parentTopicId%22%3A${topicId_1}%2C%22notVoteAsAbtain%22%3Afalse%2C%22sloganMarginLeft%22%3A0%2C%22sloganMarginRight%22%3A0%2C%22topicExField%22%3A%7B%22votePassMode%22%3A0%2C%22votePassState%22%3A0%7D%2C%22result%22%3A0%2C%22message%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics/add/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取voteType" enabled="false">
                  <stringProp name="JSONPostProcessor.referenceNames">voteType</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.voteType</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_表决选项1_添加获取optionId" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22optionId%22%3A0%2C%22optId%22%3A0%2C%22cnName%22%3A%22赞成%22%2C%22enName%22%3Anull%2C%22fileUrl%22%3Anull%2C%22briefInfo%22%3A%22%22%2C%22photoName%22%3Anull%2C%22ticket%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics/${topicId_2}/options/add</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;optId\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取optionId" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">optionId</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.optionId</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_表决选项2_添加获取optionId_1" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22optionId%22%3A0%2C%22optId%22%3A1%2C%22cnName%22%3A%22弃权%22%2C%22enName%22%3Anull%2C%22fileUrl%22%3Anull%2C%22briefInfo%22%3A%22%22%2C%22photoName%22%3Anull%2C%22ticket%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics/${topicId_2}/options/add</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;optId\&quot;:1&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取optionId_1" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">optionId_1</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.optionId</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_表决选项3_添加获取optionId_3" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22optionId%22%3A0%2C%22optId%22%3A2%2C%22cnName%22%3A%22反对%22%2C%22enName%22%3Anull%2C%22fileUrl%22%3Anull%2C%22briefInfo%22%3A%22%22%2C%22photoName%22%3Anull%2C%22ticket%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics/${topicId_2}/options/add</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;optId\&quot;:2&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取optionId_3" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">optionId_3</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.optionId</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_表决选项1_编辑" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22optionId%22%3A${optionId}%2C%22optId%22%3A0%2C%22cnName%22%3A%22赞成%22%2C%22enName%22%3Anull%2C%22fileUrl%22%3Anull%2C%22briefInfo%22%3A%22%22%2C%22photoName%22%3Anull%2C%22ticket%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics/${topicId_2}/options/add</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;optId\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_表决选项2_编辑" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22optionId%22%3A${optionId_1}%2C%22optId%22%3A1%2C%22cnName%22%3A%22弃权%22%2C%22enName%22%3Anull%2C%22fileUrl%22%3Anull%2C%22briefInfo%22%3A%22%22%2C%22photoName%22%3Anull%2C%22ticket%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics/${topicId_2}/options/add</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;optId\&quot;:1&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_表决选项3_编辑" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22optionId%22%3A${optionId_3}%2C%22optId%22%3A2%2C%22cnName%22%3A%22反对%22%2C%22enName%22%3Anull%2C%22fileUrl%22%3Anull%2C%22briefInfo%22%3A%22%22%2C%22photoName%22%3Anull%2C%22ticket%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics/${topicId_2}/options/add</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;optId\&quot;:2&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_表决_删除" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${roomId}/topics/${topicId_2}/delete</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_查询" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, application/xml, text/json, text/x-json, text/javascript, text/xml</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">RestSharp/105.2.3.0</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="多议题表决" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">1</stringProp>
            </LoopController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_多议题表决_新增获取topicId_3" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22meetingId%22%3A${meetingId}%2C%22topicId%22%3A0%2C%22topicName%22%3A%22自动化多议题表决_${__time(yyyy-MM-dd HH:mm:ss,)}%22%2C%22topicType%22%3A3%2C%22voteId%22%3A0%2C%22voteType%22%3A${__Random(0,2,)}%2C%22displayReadyTime%22%3A1%2C%22readyVoteTime%22%3A3%2C%22autoResult%22%3Atrue%2C%22autoResultTime%22%3A15%2C%22nominative%22%3Afalse%2C%22closeHintWindow%22%3Afalse%2C%22weightVote%22%3Afalse%2C%22screenAutoShow%22%3Atrue%2C%22percentShow%22%3Atrue%2C%22voteOptionCount%22%3A3%2C%22stepValue%22%3A0%2C%22hasResult%22%3Afalse%2C%22topicStatus%22%3A0%2C%22maxSelection%22%3A1%2C%22first%22%3Afalse%2C%22optionBeenList%22%3Anull%2C%22passPercent%22%3A50%2C%22sloganId%22%3A0%2C%22docType%22%3A0%2C%22autoSend%22%3Afalse%2C%22dicussId%22%3A0%2C%22mode%22%3A0%2C%22requestNum%22%3A0%2C%22speakNum%22%3A0%2C%22speakTime%22%3A0%2C%22seatDisplay%22%3A0%2C%22screenDisplay%22%3A0%2C%22reportId%22%3A0%2C%22showTitle%22%3Afalse%2C%22createTime%22%3A0%2C%22topicKey%22%3A%22202207140319142309%22%2C%22largeThan%22%3Atrue%2C%22enableVoteBase%22%3Afalse%2C%22bgColor%22%3A87194%2C%22sequence%22%3A1%2C%22parentTopicId%22%3A0%2C%22notVoteAsAbtain%22%3Afalse%2C%22sloganMarginLeft%22%3A0%2C%22sloganMarginRight%22%3A0%2C%22topicExField%22%3A%7B%22votePassMode%22%3A0%2C%22votePassState%22%3A0%7D%2C%22result%22%3A0%2C%22message%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics/add/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取topicId_3" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">topicId_3</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.topicId</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_多议题表决_编辑获取voteType_1" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22meetingId%22%3A${meetingId}%2C%22topicId%22%3A${topicId_3}%2C%22topicName%22%3A%22自动化编辑多议题表决_${__time(yyyy-MM-dd HH:mm:ss,)}%22%2C%22topicType%22%3A3%2C%22voteId%22%3A0%2C%22voteType%22%3A0%2C%22displayReadyTime%22%3A1%2C%22readyVoteTime%22%3A3%2C%22autoResult%22%3Atrue%2C%22autoResultTime%22%3A15%2C%22nominative%22%3Afalse%2C%22closeHintWindow%22%3Afalse%2C%22weightVote%22%3Afalse%2C%22screenAutoShow%22%3Atrue%2C%22percentShow%22%3Atrue%2C%22voteOptionCount%22%3A3%2C%22stepValue%22%3A0%2C%22hasResult%22%3Afalse%2C%22topicStatus%22%3A0%2C%22maxSelection%22%3A1%2C%22first%22%3Afalse%2C%22optionBeenList%22%3Anull%2C%22passPercent%22%3A50%2C%22sloganId%22%3A0%2C%22docType%22%3A0%2C%22autoSend%22%3Afalse%2C%22dicussId%22%3A0%2C%22mode%22%3A0%2C%22requestNum%22%3A0%2C%22speakNum%22%3A0%2C%22speakTime%22%3A0%2C%22seatDisplay%22%3A0%2C%22screenDisplay%22%3A0%2C%22reportId%22%3A0%2C%22showTitle%22%3Afalse%2C%22createTime%22%3A0%2C%22topicKey%22%3A%22202207140319142309%22%2C%22largeThan%22%3Atrue%2C%22enableVoteBase%22%3Afalse%2C%22bgColor%22%3A87194%2C%22sequence%22%3A207%2C%22parentTopicId%22%3A0%2C%22notVoteAsAbtain%22%3Afalse%2C%22sloganMarginLeft%22%3A0%2C%22sloganMarginRight%22%3A0%2C%22topicExField%22%3A%7B%22votePassMode%22%3A0%2C%22votePassState%22%3A0%7D%2C%22result%22%3A0%2C%22message%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics/add/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取voteType_1" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">voteType_1</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.voteType</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_多议题表决_添加标语" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">-------------------------------28947758029299&#xd;
Content-Disposition: form-data; name=&quot;bgColor&quot;&#xd;
&#xd;
87194&#xd;
-------------------------------28947758029299&#xd;
Content-Disposition: form-data; name=&quot;topicFile&quot;; filename=&quot;T_202207140319142309_Content.RTF&quot;&#xd;
Content-Type: application/octet-stream&#xd;
&#xd;
{\rtf1\ansi\ansicpg936\deff0\deflang1033\deflangfe2052{\fonttbl{\f0\fnil\fcharset0 Arial;}}&#xd;
{\colortbl ;\red255\green255\blue255;}&#xd;
\viewkind4\uc1\pard\cf1\lang2052\fs101 自动化多议题表决标语_${__time(yyyy-MM-dd HH:mm:ss,)}\par&#xd;
}&#xd;
.&#xd;
-------------------------------28947758029299--</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics/${topicId_3}/file</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">接口已调试完成，但是添加标语只能在本地保存显示，用接口传到服务器界面未必显示</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, application/xml, text/json, text/x-json, text/javascript, text/xml</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">RestSharp/105.2.3.0</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">multipart/form-data; boundary=-----------------------------28947758029299</stringProp>
                    </elementProp>
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${domain}:${port}</stringProp>
                    </elementProp>
                    <elementProp name="Content-Length" elementType="Header">
                      <stringProp name="Header.name">Content-Length</stringProp>
                      <stringProp name="Header.value">569</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_多议题表决_删除" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${roomId}/topics/${topicId_3}/delete</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_多议题表决的子议题_新增获取voteId" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22meetingId%22%3A${meetingId}%2C%22topicId%22%3A${topicId_3}%2C%22topicName%22%3A%22自动化新增多议题表决的子议题_${__time(yyyy-MM-dd HH:mm:ss,)}%22%2C%22topicType%22%3A3%2C%22voteId%22%3A0%2C%22voteType%22%3A${__Random(1,2,)}%2C%22displayReadyTime%22%3A0%2C%22readyVoteTime%22%3A0%2C%22autoResult%22%3Afalse%2C%22autoResultTime%22%3A0%2C%22nominative%22%3Afalse%2C%22closeHintWindow%22%3Afalse%2C%22weightVote%22%3Afalse%2C%22screenAutoShow%22%3Afalse%2C%22percentShow%22%3Afalse%2C%22voteOptionCount%22%3A0%2C%22stepValue%22%3A0%2C%22hasResult%22%3Afalse%2C%22topicStatus%22%3A0%2C%22maxSelection%22%3A0%2C%22first%22%3Afalse%2C%22optionBeenList%22%3Anull%2C%22passPercent%22%3A0%2C%22sloganId%22%3A0%2C%22docType%22%3A0%2C%22autoSend%22%3Afalse%2C%22dicussId%22%3A0%2C%22mode%22%3A0%2C%22requestNum%22%3A0%2C%22speakNum%22%3A0%2C%22speakTime%22%3A0%2C%22seatDisplay%22%3A0%2C%22screenDisplay%22%3A0%2C%22reportId%22%3A0%2C%22showTitle%22%3Afalse%2C%22createTime%22%3A0%2C%22topicKey%22%3Anull%2C%22largeThan%22%3Afalse%2C%22enableVoteBase%22%3Afalse%2C%22bgColor%22%3A0%2C%22sequence%22%3A0%2C%22parentTopicId%22%3A0%2C%22notVoteAsAbtain%22%3Afalse%2C%22sloganMarginLeft%22%3A0%2C%22sloganMarginRight%22%3A0%2C%22topicExField%22%3Anull%2C%22result%22%3A0%2C%22message%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/multi_topics/${topicId_3}/child/add</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取voteId" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">voteId</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.voteId</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_多议题表决的子议题_编辑" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22meetingId%22%3A${meetingId}%2C%22topicId%22%3A${topicId_3}%2C%22topicName%22%3A%22自动化编辑多议题表决的子议题_${__time(yyyy-MM-dd HH:mm:ss,)}%22%2C%22topicType%22%3A3%2C%22voteId%22%3A${voteId}%2C%22voteType%22%3A${__Random(1,2,)}%2C%22displayReadyTime%22%3A0%2C%22readyVoteTime%22%3A0%2C%22autoResult%22%3Afalse%2C%22autoResultTime%22%3A0%2C%22nominative%22%3Afalse%2C%22closeHintWindow%22%3Afalse%2C%22weightVote%22%3Afalse%2C%22screenAutoShow%22%3Afalse%2C%22percentShow%22%3Afalse%2C%22voteOptionCount%22%3A0%2C%22stepValue%22%3A0%2C%22hasResult%22%3Afalse%2C%22topicStatus%22%3A0%2C%22maxSelection%22%3A0%2C%22first%22%3Afalse%2C%22optionBeenList%22%3Anull%2C%22passPercent%22%3A0%2C%22sloganId%22%3A0%2C%22docType%22%3A0%2C%22autoSend%22%3Afalse%2C%22dicussId%22%3A0%2C%22mode%22%3A0%2C%22requestNum%22%3A0%2C%22speakNum%22%3A0%2C%22speakTime%22%3A0%2C%22seatDisplay%22%3A0%2C%22screenDisplay%22%3A0%2C%22reportId%22%3A0%2C%22showTitle%22%3Afalse%2C%22createTime%22%3A0%2C%22topicKey%22%3Anull%2C%22largeThan%22%3Afalse%2C%22enableVoteBase%22%3Afalse%2C%22bgColor%22%3A0%2C%22sequence%22%3A0%2C%22parentTopicId%22%3A0%2C%22notVoteAsAbtain%22%3Afalse%2C%22sloganMarginLeft%22%3A0%2C%22sloganMarginRight%22%3A0%2C%22topicExField%22%3Anull%2C%22result%22%3A0%2C%22message%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/multi_topics/${topicId_3}/child/add</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_多议题表决的子议题_查询" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics/${topicId_3}/child</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_多议题表决的子议题_删除" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${roomId}/multi_topics/${topicId_3}/child/clear</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_多议题表决选项1_添加" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22optionId%22%3A0%2C%22optId%22%3A0%2C%22cnName%22%3A%22赞成%22%2C%22enName%22%3Anull%2C%22fileUrl%22%3Anull%2C%22briefInfo%22%3A%22%22%2C%22photoName%22%3Anull%2C%22ticket%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics/${topicId_3}/options/add</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;optId\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_多议题表决选项2_添加" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22optionId%22%3A0%2C%22optId%22%3A1%2C%22cnName%22%3A%22弃权%22%2C%22enName%22%3Anull%2C%22fileUrl%22%3Anull%2C%22briefInfo%22%3A%22%22%2C%22photoName%22%3Anull%2C%22ticket%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics/${topicId_3}/options/add</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;optId\&quot;:1&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_多议题表决选项3_添加" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22optionId%22%3A0%2C%22optId%22%3A2%2C%22cnName%22%3A%22反对%22%2C%22enName%22%3Anull%2C%22fileUrl%22%3Anull%2C%22briefInfo%22%3A%22%22%2C%22photoName%22%3Anull%2C%22ticket%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics/${topicId_3}/options/add</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;optId\&quot;:2&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_议题议案_查询" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="人员资料" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="自定义类型" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">1</stringProp>
            </LoopController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_系统管理_人员资料_民族_新增获取id" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22id%22%3A0%2C%22customField%22%3A3%2C%22content%22%3A%22自动化民族_${__time(yyyy_MM_dd HH:mm:ss,)}%22%2C%22extendField%22%3A%22%7B%5C%22FieldType%5C%22%3A%5C%22CUSTOMER%5C%22%2C%5C%22CustomCode%5C%22%3A%5C%22Cus10%5C%22%7D%22%2C%22result%22%3A0%2C%22message%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/userinfos/custom_fields/add</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="URL解码" enabled="false">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">String response = prev.getResponseDataAsString();
out=URLDecoder.decode(response, &quot;utf-8&quot;);
prev.setResponseData(out.toString());</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 后置处理程序" enabled="false">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">private static String ascii2native ( String asciicode )
{
    String[] asciis = asciicode.split (&quot;\\\\u&quot;);
    String nativeValue = asciis[0];
    try
    {
        for ( int i = 1; i &lt; asciis.length; i++ )
        {
            String code = asciis[i];
            nativeValue += (char) Integer.parseInt (code.substring (0, 4), 16);
            if (code.length () &gt; 4)
            {
                nativeValue += code.substring (4, code.length ());
            }
        }
    }
    catch (NumberFormatException e)
    {
        return asciicode;
    }
    return nativeValue;
}
String asciicode =new String(prev.getResponseData(),&quot;UTF-8&quot;);
prev.setResponseData(ascii2native(asciicode));</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="false">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;id\&quot;:${id}&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言" enabled="true">
                  <stringProp name="JSON_PATH">$.extendField</stringProp>
                  <stringProp name="EXPECTED_VALUE">{\&quot;FieldType\&quot;:(.*)</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">true</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取id" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">id</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_系统管理_人员资料_民族_编辑获取content" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22id%22%3A${id}%2C%22customField%22%3A3%2C%22content%22%3A%22自动化编辑民族_${__time(yyyy_MM_dd HH:mm:ss,)}%22%2C%22extendField%22%3A%22%7B%5C%22FieldType%5C%22%3A%5C%22CUSTOMER%5C%22%2C%5C%22CustomCode%5C%22%3A%5C%22Cus10%5C%22%7D%22%2C%22result%22%3A0%2C%22message%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/userinfos/custom_fields/add</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言" enabled="true">
                  <stringProp name="JSON_PATH">$.extendField</stringProp>
                  <stringProp name="EXPECTED_VALUE">{\&quot;FieldType\&quot;:(.*)</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">true</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取content" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">content</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.content</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_系统管理_人员资料_人员类型_新增获取id_1" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22id%22%3A0%2C%22customField%22%3A2%2C%22content%22%3A%22自动化人员类型_${__time(yyyy_MM_dd HH:mm:ss,)}%22%2C%22extendField%22%3A%22%7B%5C%22FieldType%5C%22%3A%5C%22CUSTOMER%5C%22%2C%5C%22CustomCode%5C%22%3A%5C%22Cus10%5C%22%7D%22%2C%22result%22%3A0%2C%22message%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/userinfos/custom_fields/add</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="URL解码" enabled="false">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">String response = prev.getResponseDataAsString();
out=URLDecoder.decode(response, &quot;utf-8&quot;);
prev.setResponseData(out.toString());</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 后置处理程序" enabled="false">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">private static String ascii2native ( String asciicode )
{
    String[] asciis = asciicode.split (&quot;\\\\u&quot;);
    String nativeValue = asciis[0];
    try
    {
        for ( int i = 1; i &lt; asciis.length; i++ )
        {
            String code = asciis[i];
            nativeValue += (char) Integer.parseInt (code.substring (0, 4), 16);
            if (code.length () &gt; 4)
            {
                nativeValue += code.substring (4, code.length ());
            }
        }
    }
    catch (NumberFormatException e)
    {
        return asciicode;
    }
    return nativeValue;
}
String asciicode =new String(prev.getResponseData(),&quot;UTF-8&quot;);
prev.setResponseData(ascii2native(asciicode));</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取id_1" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">id_1</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言" enabled="true">
                  <stringProp name="JSON_PATH">$.extendField</stringProp>
                  <stringProp name="EXPECTED_VALUE">{\&quot;FieldType\&quot;:(.*)</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">true</boolProp>
                </JSONPathAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_系统管理_人员资料_人员类型_编辑获取content_1" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22id%22%3A${id_1}%2C%22customField%22%3A2%2C%22content%22%3A%22自动化编辑人员类型_${__time(yyyy_MM_dd HH:mm:ss,)}%22%2C%22extendField%22%3A%22%7B%5C%22FieldType%5C%22%3A%5C%22CUSTOMER%5C%22%2C%5C%22CustomCode%5C%22%3A%5C%22Cus10%5C%22%7D%22%2C%22result%22%3A0%2C%22message%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/userinfos/custom_fields/add</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言" enabled="true">
                  <stringProp name="JSON_PATH">$.extendField</stringProp>
                  <stringProp name="EXPECTED_VALUE">{\&quot;FieldType\&quot;:(.*)</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">true</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取content_1" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">content_1</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.content</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_系统管理_人员资料_代表团_新增获取id_2" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22id%22%3A0%2C%22customField%22%3A1%2C%22content%22%3A%22自动化代表团_${__time(yyyy_MM_dd HH:mm:ss,)}%22%2C%22extendField%22%3A%22%7B%5C%22FieldType%5C%22%3A%5C%22CUSTOMER%5C%22%2C%5C%22CustomCode%5C%22%3A%5C%22Cus10%5C%22%7D%22%2C%22result%22%3A0%2C%22message%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/userinfos/custom_fields/add</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="URL解码" enabled="false">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">String response = prev.getResponseDataAsString();
out=URLDecoder.decode(response, &quot;utf-8&quot;);
prev.setResponseData(out.toString());</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 后置处理程序" enabled="false">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">private static String ascii2native ( String asciicode )
{
    String[] asciis = asciicode.split (&quot;\\\\u&quot;);
    String nativeValue = asciis[0];
    try
    {
        for ( int i = 1; i &lt; asciis.length; i++ )
        {
            String code = asciis[i];
            nativeValue += (char) Integer.parseInt (code.substring (0, 4), 16);
            if (code.length () &gt; 4)
            {
                nativeValue += code.substring (4, code.length ());
            }
        }
    }
    catch (NumberFormatException e)
    {
        return asciicode;
    }
    return nativeValue;
}
String asciicode =new String(prev.getResponseData(),&quot;UTF-8&quot;);
prev.setResponseData(ascii2native(asciicode));</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取id_2" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">id_2</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言" enabled="true">
                  <stringProp name="JSON_PATH">$.extendField</stringProp>
                  <stringProp name="EXPECTED_VALUE">{\&quot;FieldType\&quot;:(.*)</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">true</boolProp>
                </JSONPathAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_系统管理_人员资料_代表团_编辑获取content_2" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="json" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">%7B%22id%22%3A${id_2}%2C%22customField%22%3A1%2C%22content%22%3A%22自动化编辑代表团_${__time(yyyy_MM_dd HH:mm:ss,)}%22%2C%22extendField%22%3A%22%7B%5C%22FieldType%5C%22%3A%5C%22CUSTOMER%5C%22%2C%5C%22CustomCode%5C%22%3A%5C%22Cus10%5C%22%7D%22%2C%22result%22%3A0%2C%22message%22%3A0%7D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">json</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/userinfos/custom_fields/add</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言" enabled="true">
                  <stringProp name="JSON_PATH">$.extendField</stringProp>
                  <stringProp name="EXPECTED_VALUE">{\&quot;FieldType\&quot;:(.*)</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">true</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取content_2" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">content_2</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.content</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_系统管理_人员资料_自定义类型_查询获取id_3" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/userinfos/custom_fields</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="获取id_3" enabled="true">
                  <stringProp name="VAR">id_3</stringProp>
                  <stringProp name="JSONPATH">$..[?(@.content=~/.*自动化.*/)].id</stringProp>
                  <stringProp name="DEFAULT"></stringProp>
                  <stringProp name="VARIABLE"></stringProp>
                  <stringProp name="SUBJECT">BODY</stringProp>
                  <stringProp name="INPUT_FORMAT">JSON</stringProp>
                </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_系统管理_人员资料_删除自定义类型" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/userinfos/custom_fields/${id_3_1}/delete</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="人员资料" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">1</stringProp>
            </LoopController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_系统管理_人员资料_新增人员资料获取userInfoId" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">-------------------------------28947758029299&#xd;
Content-Disposition: form-data; name=&quot;json&quot;&#xd;
&#xd;
{&quot;userInfoId&quot;:0,&quot;ID&quot;:&quot;${__Random(11,200,)}&quot;,&quot;userInfoName&quot;:&quot;自动化姓名_${__time(yyyy_MM_dd HH:mm:ss,)}&quot;,&quot;gender&quot;:${__chooseRandom(true,false,)},&quot;sign&quot;:false,&quot;voted&quot;:false,&quot;delegationStr&quot;:&quot;${content_2}&quot;,&quot;language&quot;:&quot;${__chooseRandom(English,chinese,)}&quot;,&quot;typeStr&quot;:&quot;${content_1}&quot;,&quot;nationStr&quot;:&quot;${content}&quot;,&quot;weight&quot;:0,&quot;seat&quot;:&quot;${__Random(1,150,)}&quot;,&quot;card&quot;:&quot;${__Random(1,10000,)}&quot;,&quot;job&quot;:&quot;自动化职位_${__time(yyyy_MM_dd HH:mm:ss,)}&quot;,&quot;introduction&quot;:&quot;&quot;,&quot;votedOptionIds&quot;:[1,1],&quot;attend&quot;:0,&quot;hasVote&quot;:true,&quot;image&quot;:null,&quot;photoName&quot;:&quot;&quot;,&quot;organization&quot;:&quot;自动化单位_${__time(yyyy_MM_dd HH:mm:ss,)}&quot;,&quot;registerTime&quot;:0,&quot;userInfoKey&quot;:&quot;1657875192803.2189b01797f36b4d62a98&quot;,&quot;result&quot;:0,&quot;message&quot;:0}&#xd;
-------------------------------28947758029299--</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/userinfos/add</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, application/xml, text/json, text/x-json, text/javascript, text/xml</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">RestSharp/105.2.3.0</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">multipart/form-data; boundary=-----------------------------28947758029299</stringProp>
                    </elementProp>
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${domain}:${port}</stringProp>
                    </elementProp>
                    <elementProp name="Content-Length" elementType="Header">
                      <stringProp name="Header.name">Content-Length</stringProp>
                      <stringProp name="Header.value">543</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Connection" elementType="Header">
                      <stringProp name="Header.name">Connection</stringProp>
                      <stringProp name="Header.value">Keep-Alive</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取userInfoId" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">userInfoId</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.userInfoId</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_系统管理_人员资料_编辑人员资料获取userInfoId_1 \ id_4 \ userInfoName \ gender \ delegationStr \ language \ typeStr \ nationStr \ seat \ card \ job \ organization" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">-------------------------------28947758029299&#xd;
Content-Disposition: form-data; name=&quot;json&quot;&#xd;
&#xd;
{&quot;userInfoId&quot;:${userInfoId},&quot;ID&quot;:&quot;${__Random(11,200,)}&quot;,&quot;userInfoName&quot;:&quot;自动化编辑姓名_${__time(yyyy_MM_dd HH:mm:ss,)}&quot;,&quot;gender&quot;:${__chooseRandom(true,false,)},&quot;sign&quot;:false,&quot;voted&quot;:false,&quot;delegationStr&quot;:&quot;${content_2}&quot;,&quot;language&quot;:&quot;${__chooseRandom(English,chinese,)}&quot;,&quot;typeStr&quot;:&quot;${content_1}&quot;,&quot;nationStr&quot;:&quot;${content}&quot;,&quot;weight&quot;:0,&quot;seat&quot;:&quot;${__Random(1,150,)}&quot;,&quot;card&quot;:&quot;${__Random(1,10000,)}&quot;,&quot;job&quot;:&quot;自动化编辑职位_${__time(yyyy_MM_dd HH:mm:ss,)}&quot;,&quot;introduction&quot;:&quot;&quot;,&quot;votedOptionIds&quot;:[1,1],&quot;attend&quot;:0,&quot;hasVote&quot;:true,&quot;image&quot;:null,&quot;photoName&quot;:&quot;&quot;,&quot;organization&quot;:&quot;自动化编辑单位_${__time(yyyy_MM_dd HH:mm:ss,)}&quot;,&quot;registerTime&quot;:0,&quot;userInfoKey&quot;:null,&quot;result&quot;:0,&quot;message&quot;:0}&#xd;
-------------------------------28947758029299--</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/userinfos/add</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, application/xml, text/json, text/x-json, text/javascript, text/xml</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">RestSharp/105.2.3.0</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">multipart/form-data; boundary=-----------------------------28947758029299</stringProp>
                    </elementProp>
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${domain}:${port}</stringProp>
                    </elementProp>
                    <elementProp name="Content-Length" elementType="Header">
                      <stringProp name="Header.name">Content-Length</stringProp>
                      <stringProp name="Header.value">520</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Connection" elementType="Header">
                      <stringProp name="Header.name">Connection</stringProp>
                      <stringProp name="Header.value">Keep-Alive</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取userInfoId_1" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">userInfoId_1</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.userInfoId</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取id_4" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">id_4</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取userInfoName" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">userInfoName</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.userInfoName</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取gender" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">gender</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.gender</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取delegationStr" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">delegationStr</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.delegationStr</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取language" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">language</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.language</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取typeStr" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">typeStr</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.typeStr</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取nationStr" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">nationStr</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.nationStr</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取seat" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">seat</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.seat</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取card" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">card</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.card</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取job" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">job</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.job</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取organization" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">organization</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.organization</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_系统管理_人员资料_删除人员资料" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/userinfos/${userInfoId}/delete</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_系统管理_人员资料_查询所有人员资料" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/userinfos</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="与会人员" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_与会人员_新增" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">-------------------------------28947758029299&#xd;
Content-Disposition: form-data; name=&quot;json&quot;&#xd;
&#xd;
{&quot;userInfoBeenList&quot;:[{&quot;userInfoId&quot;:${userInfoId_1},&quot;ID&quot;:&quot;${id_4}&quot;,&quot;userInfoName&quot;:&quot;${userInfoName}&quot;,&quot;gender&quot;:${gender},&quot;sign&quot;:true,&quot;voted&quot;:false,&quot;delegationStr&quot;:&quot;${delegationStr}&quot;,&quot;language&quot;:${language},&quot;typeStr&quot;:&quot;${typeStr}&quot;,&quot;nationStr&quot;:&quot;${nationStr}&quot;,&quot;weight&quot;:0,&quot;seat&quot;:&quot;${seat}&quot;,&quot;card&quot;:&quot;${card}&quot;,&quot;job&quot;:&quot;${job}&quot;,&quot;introduction&quot;:&quot;&quot;,&quot;votedOptionIds&quot;:[1,1],&quot;attend&quot;:0,&quot;hasVote&quot;:true,&quot;image&quot;:null,&quot;photoName&quot;:&quot;&quot;,&quot;organization&quot;:&quot;${organization}&quot;,&quot;registerTime&quot;:0,&quot;userInfoKey&quot;:&quot;1658132005687.88f1f5465fe3074e9b897&quot;,&quot;result&quot;:0,&quot;message&quot;:0}],&quot;result&quot;:0,&quot;message&quot;:0}&#xd;
-------------------------------28947758029299--</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/userinfos/add/batch</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, application/xml, text/json, text/x-json, text/javascript, text/xml</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">RestSharp/105.2.3.0</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">multipart/form-data; boundary=-----------------------------28947758029299</stringProp>
                  </elementProp>
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${domain}:${port}</stringProp>
                  </elementProp>
                  <elementProp name="Content-Length" elementType="Header">
                    <stringProp name="Header.name">Content-Length</stringProp>
                    <stringProp name="Header.value">591</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="退出设置" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_会前设置_会议管理_退出设置" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/rooms/${roomId}/info/1</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">路劲：rooms/{roomId}/info/{单元号}     单元号是本地生成，主要是识别身份，单元号出现不能相同</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="召开会议" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="选择会议" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_召开会议_选择会议_查询" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/meetings/conferences</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_召开会议_选择会议_开始会议" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="meetingId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${meetingId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">meetingId</stringProp>
                  </elementProp>
                  <elementProp name="control" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">104</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">control</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/rooms/${roomId}/meeting/start</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">参数中的  control  字段代表终端，104代表PC端，100代表平板</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="报到" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_召开会议_开始会议_报到_开始报到" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="restart" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">True</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">restart</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/rooms/${roomId}/meeting/register/start</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;result\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_平板_召开会议_开始会议_报到_签到" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${id_4}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ID</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/rooms/${roomId}/meeting/register</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;result\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_召开会议_开始会议_报到_结束报到" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/rooms/${roomId}/meeting/register/end</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;result\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_召开会议_开始会议_报到_报到结果" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/register/result</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;result\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_召开会议_开始会议_报到_销报" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${id_4}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ID</stringProp>
                  </elementProp>
                  <elementProp name="attend" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">attend</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/rooms/${roomId}/meeting/attend</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;result\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_后台_召开会议_开始会议_报到_补报" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${id_4}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ID</stringProp>
                  </elementProp>
                  <elementProp name="attend" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">attend</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/rooms/${roomId}/meeting/attend</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;result\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="议题列表" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_平板_召开会议_开始会议_议题列表_表决_开始议题" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="topicId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${topicId_2}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">topicId</stringProp>
                  </elementProp>
                  <elementProp name="limitTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">limitTime</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/rooms/${roomId}/meeting/current_topic/start</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;result\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_平板_召开会议_开始会议_议题列表_表决_获取议题选项获取cnName /  optId" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/meetings/${roomId}/topics/${topicId_2}/options</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;optId\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取cnName" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">cnName</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.optionBeanList[0].cnName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取optId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">optId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.optionBeanList[0].optId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_平板_召开会议_开始会议_议题列表_表决_表决" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;optionBeanList&quot;:[{&quot;cnName&quot;:&quot;${cnName}&quot;,&quot;optId&quot;:${optId}}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/rooms/${roomId}/meeting/current_topic/ID/${id_4}/options</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;result\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_平板_召开会议_开始会议_议题列表_表决_结束议题" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="save" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">save</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/rooms/${roomId}/meeting/current_topic/end</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;result\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_平板_召开会议_开始会议_议题列表_多议题表决_开始议题" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="topicId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${topicId_3}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">topicId</stringProp>
                  </elementProp>
                  <elementProp name="limitTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">limitTime</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/rooms/${roomId}/meeting/current_topic/start</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;result\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_平板_召开会议_开始会议_议题列表_多议题表决_获取议题选项获取cnName_1 /  optId_1" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics/${topicId_3}/options</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;optId\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取cnName_1" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">cnName_1</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.optionBeanList[0].cnName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取optId_1" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">optId_1</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.optionBeanList[0].optId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_平板_召开会议_开始会议_议题列表_多议题表决_表决" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;optionMap&quot;:{&quot;${voteId}&quot;:[{&quot;cnName&quot;:&quot;${cnName_1}&quot;,&quot;optId&quot;:${optId_1}}]}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/rooms/${roomId}/meeting/current_topic/ID/${id_4}/multi_options</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;result\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_平板_召开会议_开始会议_议题列表_多议题表决_结束议题" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="save" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">save</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/rooms/${roomId}/meeting/current_topic/end</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;result\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="结束会议" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_平板_召开会议_开始会议_议题列表_结束会议" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="meetingId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${meetingId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">meetingId</stringProp>
                  </elementProp>
                  <elementProp name="deleteFiles" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">False</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">deleteFiles</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/rooms/${roomId}/meeting/end</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String response = &quot;&quot;;
String Str = &quot;\&quot;message\&quot;:0&quot;;   //预期结果，需要校验的字段

response = prev.getResponseDataAsString();    //获取当前请求响应结果
  
if(response == &quot;&quot;){  
    Failure = true;  
    FailureMessage =   &quot;系统无响应，获取不到响应数据！&quot;;  
    //对比数据库内容和响应内容，私用euqals方法判断是否一致  
    }
else if(response.contains(Str) == false){  
        //把断言失败置为真   
        Failure = true;    
        String Msg = &quot;\n系统返回响应结果与期望结果不一致！请排查是性能问题，还是程序代码问题&quot;;       		          FailureMessage = Msg + &quot;\n&quot; + &quot;期望结果:\n&quot; + Str + &quot;\n&quot; + &quot;响应内容: \n&quot; + response +&quot;\n&quot;;   
        }</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="会后处理" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="选择会议" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_平板_会后处理_选择会议_查询会议名称" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/meetings</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_平板_会后处理_选择会议" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="人员资料" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${environment}_平板_会后处理_人员资料" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/register/detail</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/meetings/${meetingId}/topics/${topicId_3}/result</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="调试取样器" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
